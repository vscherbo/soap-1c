#!/usr/bin/env python2.7
# -*- coding: utf-8 -

# import xml.etree.ElementTree as ET

from xml.etree import ElementTree as ET
from xml.etree.ElementTree import tostring
import codecs

def elem2str(aLabel, aTag, aText):
    if None != aText and u'\n' != aText:
       rstr = aLabel + aTag + u'=' + aText +u'\n'
    else:
       rstr = u'None or CR\n'
    return rstr


myNamespaces=dict(ns1="http://ws.orgregister.company1c.com/", soapenv="http://schemas.xmlsoap.org/soap/envelope/")
#tree = ET.parse('./soap.xml')

xml_test="""<РеквизитыЮрЛица xmlns="http://company1c.com/orgregister/corporation" xmlns:ns2="http://company1c.com/orgregister/entrepreneur" ОГРН="1107847032028" ИНН="7804431521" КПП="780401001"><СвНаимЮЛ ДатаНачДейств="2010-02-11+03:00" ДатаОбрЮЛ="2010-02-11+03:00" ГРН="1107847032028" НаимЮЛПолн="Общество с ограниченной ответственностью &quot;Автоматика&quot;" НаимЮЛСокр="ООО &quot;Автоматика&quot;"><ОПФ СпрОПФ="ОКОПФ" КодОПФ="65" ПолнНаимОПФ="Общество с ограниченной ответственностью"/></СвНаимЮЛ><СвАдрес ДатаНачДейств="2011-09-16+04:00" ГРН="7117847957605"><Адрес Страна="РОССИЯ"><Состав xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="АдресРФ"><СубъектРФ>Санкт-Петербург  г</СубъектРФ><Улица>Политехническая ул</Улица><ДопАдрЭл ТипАдрЭл="10100000" Значение="194064"/><ДопАдрЭл><Номер Тип="1010" Значение="29"/></ДопАдрЭл><ДопАдрЭл><Номер Тип="1050" Значение="2"/></ДопАдрЭл><ДопАдрЭл><Номер Тип="2010" Значение="53"/></ДопАдрЭл></Состав></Адрес></СвАдрес><СвУправлДеят><СведДолжнФЛ ДатаНачДейств="2012-07-02+04:00" ГРН="7127847655885" НаимВидДолжн="Руководитель юридического лица" НаимДолжн="Генеральный директор" ИННФЛ="782507608784"><ФИО Фамилия="Бондаренко" Имя="Владислав" Отчество="Владимирович"/></СведДолжнФЛ></СвУправлДеят><СвУчетНО ДатаНачДейств="2010-02-11+03:00" ГРН="2107847275292" ИНН="7804431521" КПП="780401001" ДатаПостУч="2010-02-11+03:00"><СвНО КодНО="7804" НаимНО="Межрайонная инспекция Федеральной налоговой службы №18 по Санкт-Петербургу"/></СвУчетНО><СвСтатус_РО ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028"><СвСтатус КодСтатусЮЛ="001" НаимСтатусЮЛ="Действующее"/><СвРегОрг КодНО="7847" НаимНО="Межрайонная инспекция Федеральной налоговой службы №15 по Санкт-Петербургу"/></СвСтатус_РО><СвРегПФ ДатаНачДейств="2010-02-27+03:00" ГРН="2107847544308" РегНомПФ="088005053538" ДатаРег="2010-02-15+03:00"><СвОргПФ КодПФ="088005" НаимПФ="Государственное Учреждение Управление Пенсионного фонда РФ по Калининскому району Санкт-Петербурга"/></СвРегПФ><СвРегФСС ДатаНачДейств="2010-02-18+03:00" ГРН="2107847444263" РегНомФСС="780902290078091" ДатаРег="2010-02-12+03:00"><СвОргФСС КодФСС="7809" НаимФСС="Филиал №9 Санкт-Петербургского регионального отделения Фонда социального страхования Российской Федерации"/></СвРегФСС><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="22.2"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="22.1"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="51.70"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="72.2"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="74.4"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="33.3"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="45.34"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="1" КодОКВЭД="33.2"/><СвОКВЭД ДатаНачДейств="2010-02-11+03:00" ГРН="1107847032028" ПрОснДоп="2" КодОКВЭД="74.2"/></РеквизитыЮрЛица>
"""

#root = tree.getroot()
root = ET.fromstring(xml_test)
print "fromstring\n"

outf=codecs.open('soap.tmp', 'w', 'utf-8')

print u"root TAG=" + root.tag
for k,v in root.items():
    print k + u"=" + v #+ u"\n"

for el in root:
    # outf.write(el.tag + u"/" + str(el.attrib) + u"\n")
    # outf.write(el.tag + u"\n")
    print u"TAG=" + el.tag #+ u"\n"
    for k,v in el.attrib.items():
        print k + u"=" + v #+ u"\n"

"""
result = root.find(u'*//{*}РеквизитыЮрЛица')
print "result\n"
print result
response = ET.fromstring(result.text)
for elm in response.getiterator():
    print elm
"""


"""
for result in tree.findall(u'.//ns1:getCorporationRequisitesByINNResponse',namespaces=myNamespaces): 
    print "result\n"
    print result
    for elm in result.getiterator():
        result = root.find(elm)
        if None != result:
           outf.write(u'it=' + str(result) + u"\n")
#     response = ET.fromstring(result.text)
#     for elm in response.getiterator():
#         print "elm\n"
#         print elm
"""

"""
for child in root:
    # for el in child.getiterator():
    for el in child.findall(u'*'):
        outf.write(el.tag + u"/" + str(el.attrib) + u"\n")
        for item in el.findall(u'*'):
            outf.write(item.tag + u"\n")
            for it1 in item.findall(u'*'):
                outf.write(u'it1=' + it1.tag + u"\n")
"""
 
outf.close()

